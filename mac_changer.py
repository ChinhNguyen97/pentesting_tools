#!/usr/bin/env python3

import subprocess
import argparse
import re

original_mac = "08:00:27:2d:80:ea"

#Argument parsing interface
#Return tuple(interface_name, mac_address)
def parse_arguments():
	parser = argparse.ArgumentParser(description='Simple MAC changer')
	parser.add_argument("-i","--interface", metavar='interface', dest='interface', help='Interface to change its Mac address')
	parser.add_argument("-m","--mac", dest='new_mac', metavar='address', help='Change to new MAC address')

	args = parser.parse_args()
	if not args.interface:
		parser.error("[-] Please specify an interface, use --help for more info.")
	elif not args.new_mac:	
		parser.error("[-] Please specify a new mac, use --help for more info.")
	else:
		return (args.interface,args.new_mac)

#Extract current MAC for interface from ifconfig
def get_current_mac(interface):
	result = subprocess.check_output(["ifconfig", interface],encoding="utf-8")
	match_result = re.search(r'(?<=ether\s)([a-zA-Z0-9]+:*)*', result)

	if match_result:
		return match_result.group(0)
	else:
		print("[-] Could not read MAC address.")


#Mac changer function.Call subprocesses with shell commands
def change_mac(interface, mac_address):
	print(f"[+] Changing MAC address for {interface} to {mac_address}")
	subprocess.run(["ifconfig", interface, "down"])
	subprocess.run(["ifconfig", interface, "hw", "ether", mac_address])
	subprocess.run(["ifconfig", interface, "up"])

#Main driver
def main():
	
	interface, new_mac = parse_arguments()
	current_mac = get_current_mac(interface)

	change_mac(interface, new_mac)
	current_mac = get_current_mac(interface)
	if current_mac == new_mac:
		print(f"[+] MAC address was successfully changed to {current_mac}")
	else:
		print("[-] Mac address change was unsuccessful.")	


main()